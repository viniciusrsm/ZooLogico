/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas.TelasBiologo;

import telas.TelasVeterinario.*;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import zoologico.Animal;
import zoologico.Biologo;
import zoologico.GerenciadorArquivos;
import zoologico.RecintoAnfibio;

// Tela para criação e edição do recinto de anfíbios

/**
 *
 * @author Vinicius
 */
public class RecintoAnfibioTela extends javax.swing.JFrame {
    GerenciadorArquivos arquivo;
    boolean editor = false;
    RecintoAnfibio recintoEscolhido;
    Biologo biologoCriador;
    ArrayList<Animal> animaisContidos = new ArrayList<Animal>();
    /**
     * Creates new form AdicionarAnimal
     * @param arquivo
     * @param recintoEscolhido
     */
    
    public RecintoAnfibioTela() {
        initComponents();
        
        setLocationRelativeTo(null);
        
    }
    
    public RecintoAnfibioTela(GerenciadorArquivos arquivo, Biologo biologoCriador) {
        initComponents();
        
        this.biologoCriador = biologoCriador;
        
        setLocationRelativeTo(null);
        
        this.arquivo = arquivo;
    }
     
    public RecintoAnfibioTela(GerenciadorArquivos arquivo, RecintoAnfibio recintoEscolhido) {
        initComponents();
        
        setLocationRelativeTo(null);
        
        this.arquivo = arquivo;
        this.recintoEscolhido = recintoEscolhido;
        
        this.editor = true;
        
        carregarTabelaAnimais();
        
        txtFamilia.setText(recintoEscolhido.getFamilia());
        txtVegetacao.setText(recintoEscolhido.getTipoVegetação());
        txtVolume.setText(String.valueOf(recintoEscolhido.getVolumeTerrario()));
        txtUmidade.setText(String.valueOf(recintoEscolhido.getUmidade()));
        txtTemperatura.setText(String.valueOf(recintoEscolhido.getTemperaturaTerrario()));
        jrDiurno.setSelected(recintoEscolhido.isDiurno());
        
        txtFamilia.setForeground(new Color(0, 0, 0));
        txtVegetacao.setForeground(new Color(0, 0, 0));
        txtVolume.setForeground(new Color(0, 0, 0));
        txtUmidade.setForeground(new Color(0, 0, 0));
        txtTemperatura.setForeground(new Color(0, 0, 0));
        
        
        
    }
    
    public void carregarTabelaAnimais(){
        DefaultTableModel modelo = new DefaultTableModel(new Object[] {"Espécie", "Sexo", "Tipo sanguíneo", "Data de nascimento"}, 0);
        
        ArrayList<Animal> animais = GerenciadorArquivos.getAnimais();
        for(int i=0;i < animais.size(); i++) {
            if (animais.get(i).getRecinto().getRecintoId().equals(recintoEscolhido.getRecintoId())) {
                animaisContidos.add(GerenciadorArquivos.getAnimais().get(i));
                Object linha[] = new Object[]{GerenciadorArquivos.getAnimais().get(i).getEspecie(),
                    GerenciadorArquivos.getAnimais().get(i).getSexo(),
                    GerenciadorArquivos.getAnimais().get(i).getTipoSanguineo(),
                    GerenciadorArquivos.getAnimais().get(i).getDataNascimento()};
                modelo.addRow(linha);
            }
        }
        tblAnimais.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        txtVegetacao = new javax.swing.JTextField();
        txtUmidade = new javax.swing.JTextField();
        txtTemperatura = new javax.swing.JTextField();
        btnConfAnimal = new javax.swing.JButton();
        btnCancAnimal = new javax.swing.JButton();
        jrDiurno = new javax.swing.JRadioButton();
        txtVolume = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAnimais = new javax.swing.JTable();
        btnOlharAnimal = new javax.swing.JButton();
        txtFamilia = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtVegetacao.setForeground(new java.awt.Color(153, 153, 153));
        txtVegetacao.setText("Tipo de vegetação");
        txtVegetacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtVegetacaoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtVegetacaoFocusLost(evt);
            }
        });
        txtVegetacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVegetacaoActionPerformed(evt);
            }
        });

        txtUmidade.setForeground(new java.awt.Color(153, 153, 153));
        txtUmidade.setText("Umidade");
        txtUmidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUmidadeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUmidadeFocusLost(evt);
            }
        });

        txtTemperatura.setForeground(new java.awt.Color(153, 153, 153));
        txtTemperatura.setText("Temperatura do terrário");
        txtTemperatura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTemperaturaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTemperaturaFocusLost(evt);
            }
        });

        btnConfAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/1904674_accept_approved_check_checked_confirm_icon.png"))); // NOI18N
        btnConfAnimal.setText("CONFIRMAR");
        btnConfAnimal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnConfAnimal.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnConfAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfAnimalActionPerformed(evt);
            }
        });

        btnCancAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/1904654_cancel_close_cross_delete_reject_icon.png"))); // NOI18N
        btnCancAnimal.setText("CANCELAR");
        btnCancAnimal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancAnimal.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancAnimalActionPerformed(evt);
            }
        });

        jrDiurno.setText("Diurno");

        txtVolume.setForeground(new java.awt.Color(153, 153, 153));
        txtVolume.setText("Volume do terrário");
        txtVolume.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtVolumeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtVolumeFocusLost(evt);
            }
        });

        jLabel1.setText("Animais do recinto:");

        tblAnimais.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},

            },
            new String [] {
                "Espécie", "Sexo", "Data de Nascimento"
            }
        )
        {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        }
    );
    tblAnimais.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            tblAnimaisFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            tblAnimaisFocusLost(evt);
        }
    });
    jScrollPane2.setViewportView(tblAnimais);

    btnOlharAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/olho.png"))); // NOI18N
    btnOlharAnimal.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnOlharAnimalActionPerformed(evt);
        }
    });

    txtFamilia.setForeground(new java.awt.Color(153, 153, 153));
    txtFamilia.setText("Família do recinto");
    txtFamilia.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            txtFamiliaFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            txtFamiliaFocusLost(evt);
        }
    });
    txtFamilia.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            txtFamiliaActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(txtFamilia)
                    .addContainerGap())
                .addGroup(layout.createSequentialGroup()
                    .addGap(41, 41, 41)
                    .addComponent(btnConfAnimal)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                    .addComponent(btnCancAnimal)
                    .addGap(53, 53, 53))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(txtVegetacao)
                            .addGap(18, 18, 18)
                            .addComponent(jrDiurno))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(txtUmidade, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtVolume, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING))
                    .addContainerGap())
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnOlharAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap())))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(txtFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtVegetacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jrDiurno))
                    .addGap(18, 18, 18)
                    .addComponent(txtUmidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(18, 18, 18)
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addComponent(btnOlharAnimal)
                    .addGap(109, 109, 109)))
            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnConfAnimal)
                .addComponent(btnCancAnimal))
            .addGap(18, 18, 18))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtVegetacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVegetacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVegetacaoActionPerformed

    private void txtVegetacaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVegetacaoFocusGained
        if(txtVegetacao.getText().equals("Tipo de vegetação")) {
            txtVegetacao.setText("");
            txtVegetacao.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_txtVegetacaoFocusGained

    private void txtVegetacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVegetacaoFocusLost
        if(txtVegetacao.getText().equals("")) {
            txtVegetacao.setText("Tipo de vegetação");
            txtVegetacao.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtVegetacaoFocusLost

    private void txtUmidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUmidadeFocusGained
        if(txtUmidade.getText().equals("Umidade")) {
            txtUmidade.setText("");
            txtUmidade.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_txtUmidadeFocusGained

    private void txtUmidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUmidadeFocusLost
        if(txtUmidade.getText().equals("")) {
            txtUmidade.setText("Umidade");
            txtUmidade.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtUmidadeFocusLost

    private void txtTemperaturaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTemperaturaFocusLost
        if(txtTemperatura.getText().equals("")) {
            txtTemperatura.setText("Temperatura do terrário");
            txtTemperatura.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtTemperaturaFocusLost

    private void txtTemperaturaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTemperaturaFocusGained
        if(txtTemperatura.getText().equals("Temperatura do terrário")) {
            txtTemperatura.setText("");
            txtTemperatura.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_txtTemperaturaFocusGained

    private void txtVolumeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVolumeFocusGained
        if(txtVolume.getText().equals("Volume do terrário")) {
            txtVolume.setText("");
            txtVolume.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_txtVolumeFocusGained

    private void txtVolumeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVolumeFocusLost
        if(txtVolume.getText().equals("")) {
            txtVolume.setText("Volume do terrário");
            txtVolume.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtVolumeFocusLost

    private void txtFamiliaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFamiliaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFamiliaActionPerformed

    private void txtFamiliaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFamiliaFocusGained
        if(txtFamilia.getText().equals("Família do recinto")) {
            txtFamilia.setText("");
            txtFamilia.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_txtFamiliaFocusGained

    private void txtFamiliaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFamiliaFocusLost
        if(txtFamilia.getText().equals("")) {
            txtFamilia.setText("Família do recinto");
            txtFamilia.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtFamiliaFocusLost

    private void tblAnimaisFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblAnimaisFocusGained
    }//GEN-LAST:event_tblAnimaisFocusGained

    private void tblAnimaisFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblAnimaisFocusLost
    }//GEN-LAST:event_tblAnimaisFocusLost

    private void btnCancAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancAnimalActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancAnimalActionPerformed

    private void btnConfAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfAnimalActionPerformed
        if (txtFamilia.getText().equals("Família do recinto") || txtTemperatura.getText().equals("Temperatura do terrário") || 
                txtUmidade.getText().equals("Umidade") || txtVegetacao.getText().equals("Tipo de vegetação") ||
                txtVolume.getText().equals("Volume do terrário")) 
            {
                JOptionPane.showMessageDialog(null, "Preencha todos os campos", "Campos não preenchidos", JOptionPane.PLAIN_MESSAGE);
        } else {
            if (editor) {
                recintoEscolhido.setFamilia(txtFamilia.getText());
                recintoEscolhido.setTipoVegetação(txtVegetacao.getText());
                recintoEscolhido.setUmidade(Float.parseFloat(txtUmidade.getText()));
                recintoEscolhido.setTemperaturaTerrario(Float.parseFloat(txtTemperatura.getText()));
                recintoEscolhido.setVolumeTerrario(Double.parseDouble(txtVolume.getText()));
                recintoEscolhido.setDiurno(jrDiurno.isSelected());
            }
            else {
                ArrayList<String> biologos = new ArrayList<String>();
                ArrayList<String> animais = new ArrayList<String>();
                System.out.println(biologoCriador.getCpf());
                biologos.add(biologoCriador.getCpf());
                RecintoAnfibio recintoAnfCriado = new RecintoAnfibio(Float.parseFloat(txtUmidade.getText()), Double.parseDouble(txtVolume.getText()),
                                                       Float.parseFloat(txtTemperatura.getText()), txtVegetacao.getText(), 
                                                                jrDiurno.isSelected(), animais, txtFamilia.getText(), biologos);
                biologoCriador.adicionarIdRecinto(recintoAnfCriado.getRecintoId());
                arquivo.adicionarObjeto(2, recintoAnfCriado);
            }
            dispose();
            
            
        }
        
    }//GEN-LAST:event_btnConfAnimalActionPerformed

    private void btnOlharAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOlharAnimalActionPerformed
        if (tblAnimais.getSelectedRowCount() == 1) {
            new PerfilAnimal(animaisContidos.get(tblAnimais.getSelectedRow())).setVisible(true);
        } else if (tblAnimais.getSelectedRowCount() > 1) {
            JOptionPane.showMessageDialog(null, "Escolha apenas um animal da tabela", "Mais de um animal escolhido", JOptionPane.PLAIN_MESSAGE);
        }
        else {
            JOptionPane.showMessageDialog(null, "Escolha um animal da tabela", "Animal não escolhido", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_btnOlharAnimalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecintoAnfibioTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecintoAnfibioTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecintoAnfibioTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecintoAnfibioTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecintoAnfibioTela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancAnimal;
    private javax.swing.JButton btnConfAnimal;
    private javax.swing.JButton btnOlharAnimal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton jrDiurno;
    private javax.swing.JTable tblAnimais;
    private javax.swing.JTextField txtFamilia;
    private javax.swing.JTextField txtTemperatura;
    private javax.swing.JTextField txtUmidade;
    private javax.swing.JTextField txtVegetacao;
    private javax.swing.JTextField txtVolume;
    // End of variables declaration//GEN-END:variables
}
